const contractNames: Record<`0x${string}`, string> = {
  "0x0374c001204eF5e7E4F5362A5A2430CB6c219326": "Operator v1.3",
  "0x04906695D6D12CF5459975d7C3C03356E4Ccd460": "Legacy sOHM",
  "0x0941233c964e7d7Efeb05D253176E5E634cEFfcD": "Governor",
  "0x0ab87046fBb341D058F17CBC4c1133F25a20a52f": "Legacy gOHM",
  "0x0AE561226896dA978EaDA0Bec4a7d3CfAE04f506": "Operator v1.4",
  "0x0cf30dc0d48604a301df8010cdc028c055336b2e": "Policy MS",
  "0x1652b503e0f1cf38b6246ed3b91cb3786bb11656": "Heart v1.1",
  "0x1Ce568DbB34B2631aCDB5B453c3195EA0070EC65": "Operator v1.1",
  "0x1e094fE00E13Fd06D64EeA4FB3cD912893606fE0": "Clearinghouse v1.2",
  "0x2286d7f9639e8158FaD1169e76d1FbC38247f54b": "Kernel",
  "0x245cc372C84B3645Bf0Ffe6538620B04a217988B": "DAO MS",
  "0x271e35a8555a62F6bA76508E85dfD76D580B0692": "YieldRepurchaseFacility v1.2",
  "0x27e606fdb5C922F8213dC588A434BF7583697866": "Distributor",
  "0x30A967eB957E5B1eE053B75F1A57ea6bfb2e907E": "YieldRepurchaseFacility v1",
  "0x30Ce56e80aA96EbbA1E1a74bC5c0FEB5B0dB4216": "CoolerFactory",
  "0x367149cf2d04D3114fFD1Cc6b273222664908D0B": "LegacyBurner",
  "0x375E06C694B5E50aF8be8FB03495A612eA3e2275": "BLREG",
  "0x399cD3685912bb56aAeD0949119dB6cE5Df60FB5": "RANGE v2",
  "0x39F6AA3d445e6Dd8eC232c6Bd589889A88E3034d": "Heart v1.5",
  "0x44a7a09ccddb4338e062f1a3849f9a82bdbf2aaa": "ZeroDistributor",
  "0x45e563c39cDdbA8699A90078F42353A57509543a": "CrossChainBridge",
  "0x50f441a3387625bDA8B8081cE3fd6C04CC48C0A2": "EmissionManager",
  "0x6417F206a0a6628Da136C0Faa39026d0134D2b52": "Operator v1.5",
  "0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5": "LegacyOHM",
  "0x69a3E97027d21a5984B6a543b36603fFbC6543a4": "CHREG",
  "0x6CAfd730Dc199Df73C16420C4fCAb18E3afbfA59": "ROLES",
  "0x73df08CE9dcC8d74d22F23282c4d49F13b4c795E": "BondCallback v1.1",
  "0x784cA0C006b8651BAB183829A99fA46BeCe50dBc": "LoanConsolidator",
  "0x7fdD4e808ee9608f1b2f05157A2A8098e3D432cD": "BLVaultLido",
  "0x89631595649Cc6dEBa249A8012a5b2d88C8ddE48": "RGSTY",
  "0x9229b0b6FA4A58D67Eb465567DaA2c6A34714A75": "Emergency",
  "0x953EA3223d2dd3c1A91E9D6cca1bf7Af162C9c39": "Governance Timelock",
  "0x986b99579BEc7B990331474b66CcDB94Fa2419F5": "ReserveMigrator",
  "0x9C6220fE829d6FC889cde9b4966D2033C4EfFD48": "Heart v1.2",
  "0xa8687A15D4BE32CC8F0a8a7B9704a4C3993D9613": "TRSRY",
  "0xa8A6ff2606b24F61AFA986381D8991DFcCCd2D55": "Emergency MS",
  "0xa90bFe53217da78D900749eb6Ef513ee5b6a491e": "MINTR",
  "0xafe729d57d2CC58978C2e01b4EC39C47FB7C4b23": "BLVaultManagerLido",
  "0xb212D9584cfc56EFf1117F412Fe0bBdc53673954": "RANGE v1",
  "0xb216d714d91eeC4F7120a732c11428857C659eC8": "RolesAdmin",
  "0xb37796941cA55b7E4243841930C104Ee325Da5a1": "pOLY",
  "0xB63cac384247597756545b500253ff8E607a8020": "LegacyStaking",
  "0xBA05d48Fb94dC76820EB7ea1B360fd6DfDEabdc5": "ContractRegistryAdmin",
  "0xbb47C3FFf4eF85703907d3ffca30de278b85df3f": "Operator v1",
  "0xbf2b6e99b0e8d4c96b946c182132f5752eaa55c6": "BondCallback v1",
  "0xC9518AC915e46D707585116451Dc19c164513Ccf": "TreasuryCustodian",
  "0xcaA3d3E653A626e2656d2E799564fE952D39d855": "YieldRepurchaseFacility v1.1",
  "0xD5a0Ae3Bf7309416e70cB14399bDd508fE82C658": "Heart v1.4",
  "0xd6a6e8d9e82534bd65821142fccd91ec9cf31880": "Clearinghouse v1",
  "0xd6C4D723fdadCf0D171eF9A2a3Bfa870675b282f": "PRICE",
  "0xda9fedbcaf319ecf8ab11fe874fb1abfc2181766": "pOLY MS",
  "0xdE3F82D378c3b4E3F3f848b8DF501914b3317E96": "GovernorDelegate v2",
  "0xE05646971Ec444f8449d1CA6Fc8D9793986017d5": "Heart v1.3",
  "0xE6343ad0675C9b8D3f32679ae6aDbA0766A2ab4c": "Clearinghouse v1.1",
  "0xeaf46BD21dd9b263F28EEd7260a269fFba9ace6E": "Heart v1",
  "0xF451c45C7a26e2248a0EA02382579Eb4858cAdA1": "BLVaultManager LUSD",
  "0xf577c77ee3578c7F216327F41B5D7221EaD2B2A3": "BondManager",
  "0xf6D5d06A4e8e6904E4360108749C177692F59E90": "PriceConfig",
  "0xf7602C0421c283A2fc113172EBDf64C30F21654D": "Heart v1.6",
  "0xfbB3742628e8D19E0E2d7D8dde208821C09dE960": "BLVault LUSD",
};

export const getContractName = (address: `0x${string}`): string => {
  // Convert input address to lowercase for case-insensitive comparison
  const normalizedAddress = address.toLowerCase() as `0x${string}`;

  // Find matching contract name by comparing normalized addresses
  const match = Object.entries(contractNames).find(
    ([addr]) => addr.toLowerCase() === normalizedAddress
  );

  return match ? match[1] : "UNKNOWN";
};
